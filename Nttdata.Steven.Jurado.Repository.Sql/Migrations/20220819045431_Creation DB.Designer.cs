// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nttdata.Steven.Jurado.Repository.Sql.Context;

namespace Nttdata.Steven.Jurado.Repository.Sql.Migrations
{
    [DbContext(typeof(TransactionContext))]
    [Migration("20220819045431_Creation DB")]
    partial class CreationDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nttdata.Steven.Jurado.Domain.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("IdBankAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BankAccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("BankAccountStatus")
                        .HasColumnType("int");

                    b.Property<int>("BankAccountType")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdBankAccount");

                    b.HasIndex("IdUsuario");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Nttdata.Steven.Jurado.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Nttdata.Steven.Jurado.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("IdTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBankAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TransactionBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTransaction");

                    b.HasIndex("IdBankAccount");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Nttdata.Steven.Jurado.Domain.Entities.BankAccount", b =>
                {
                    b.HasOne("Nttdata.Steven.Jurado.Domain.Entities.Client", "ClientNav")
                        .WithMany("BankAccountNav")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientNav");
                });

            modelBuilder.Entity("Nttdata.Steven.Jurado.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Nttdata.Steven.Jurado.Domain.Entities.BankAccount", "BankAccountNav")
                        .WithMany("TransactionsNav")
                        .HasForeignKey("IdBankAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccountNav");
                });

            modelBuilder.Entity("Nttdata.Steven.Jurado.Domain.Entities.BankAccount", b =>
                {
                    b.Navigation("TransactionsNav");
                });

            modelBuilder.Entity("Nttdata.Steven.Jurado.Domain.Entities.Client", b =>
                {
                    b.Navigation("BankAccountNav");
                });
#pragma warning restore 612, 618
        }
    }
}
